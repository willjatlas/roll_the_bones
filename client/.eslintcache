<<<<<<< HEAD
[{"/Users/codeclanstudent/codeclan_work/week_9/group_proj/roll_the_bones/client/src/index.js":"1","/Users/codeclanstudent/codeclan_work/week_9/group_proj/roll_the_bones/client/src/App.js":"2","/Users/codeclanstudent/codeclan_work/week_9/group_proj/roll_the_bones/client/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610201929827,"results":"4","hashOfConfig":"5"},{"size":113,"mtime":1610207662340,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610201929827,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ouk7ne",{"filePath":"10","messages":"11","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/codeclanstudent/codeclan_work/week_9/group_proj/roll_the_bones/client/src/index.js",[],"/Users/codeclanstudent/codeclan_work/week_9/group_proj/roll_the_bones/client/src/App.js",["14"],"/Users/codeclanstudent/codeclan_work/week_9/group_proj/roll_the_bones/client/src/reportWebVitals.js",[],{"ruleId":"15","severity":2,"message":"16","line":6,"column":8,"nodeType":"17","endLine":6,"endColumn":19},"react/jsx-no-undef","'GameDisplay' is not defined.","JSXIdentifier"]
=======
[{"/Users/user/codeclan_work/projects/roll_the_bones/client/src/index.js":"1","/Users/user/codeclan_work/projects/roll_the_bones/client/src/App.js":"2","/Users/user/codeclan_work/projects/roll_the_bones/client/src/reportWebVitals.js":"3","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/GameDisplay.js":"4","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/DiceDisplay.js":"5","/Users/user/codeclan_work/projects/roll_the_bones/client/src/components/Dice.js":"6"},{"size":500,"mtime":1610200880600,"results":"7","hashOfConfig":"8"},{"size":166,"mtime":1610282298749,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610200880605,"results":"10","hashOfConfig":"8"},{"size":2717,"mtime":1610282298751,"results":"11","hashOfConfig":"8"},{"size":198,"mtime":1610282298750,"results":"12","hashOfConfig":"8"},{"size":853,"mtime":1610282298750,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"xpmnjc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/user/codeclan_work/projects/roll_the_bones/client/src/index.js",[],["28","29"],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/App.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/reportWebVitals.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/GameDisplay.js",["30","31","32"],"import {useState, useEffect} from \"react\";\nimport DiceDisplay from \"./DiceDisplay\"\n\nconst GameDisplay = ()=>{\n\n    // Dice currently hard coded, could use method to return array \n    // of dice objects, given how many dice to use. \n    const dice = {value: 1, active: true , min: 1, max: 6}\n    const dice2 = {value: 1, active: true , min: 1, max: 6}\n    const dice3 = {value: 1, active: true , min: 1, max: 6}\n    const dice4 = {value: 1, active: true , min: 1, max: 6}\n    const dice5 = {value: 1, active: true , min: 1, max: 6}\n    const stickNumber = 5; \n\n    const [playerName, setPlayerName]   = useState(\"\");\n    const [playerScore, setPlayerScore] = useState(0);\n    const [turnScore, setTurnScore]     = useState(0);\n    const [availDice, setAvailDice]     = useState([dice, dice2, dice3, dice4, dice5]);\n\n    // Add the roll value to the players score. \n    const addToPlayerScore = (value)=>{\n        let tempNum = playerScore;\n        setPlayerScore(value + tempNum);\n    }\n\n    // Will return a random number between min & max.\n    const getRandomInt = (min, max) => {\n        return Math.floor(Math.random() * max) + min;\n    }\n\n    // Takes availDice and rolls new values.\n    const rollDiceValues = () => {\n        let newDiceArray = availDice.map((element)=>{\n            element.value = getRandomInt(element.min, element.max)\n            return(element);\n        })\n        console.log(`new dice array is : ${newDiceArray}`)\n        setAvailDice(newDiceArray);\n    }\n\n    // Checks a roll for sticking numbers and deactivates die.\n    const checkForStickNums = () => {\n        let newDiceArray = availDice.map((element)=>{\n            if(element.value === stickNumber){\n                element.active = false;\n            }\n            return(element);\n        });\n        console.log(`new dice array is : ${newDiceArray}`)\n        setAvailDice(newDiceArray);\n    };\n\n    // Calculates the players score and and adds it\n    // to the playerScore, sets turnScore. \n    const calculateRoll = () => {\n        let total = 0;\n        availDice.forEach((element) => {\n            if(element.active === true){\n                total += element.value;\n            } \n        });\n        setTurnScore(total)\n        addToPlayerScore(total);\n    };\n\n    // Handles the roll dice button for the game. \n    const handleRollButton = ()=>{\n        rollDiceValues();\n        checkForStickNums();\n        calculateRoll();\n    }\n\n    return(\n        <>\n            <h2>Player Score: {playerScore}</h2>\n            <h2>Score This Turn: {turnScore}</h2>\n            <button onClick={handleRollButton} value=\"Roll Dice\"> Roll Dice </button>\n            <DiceDisplay />\n        </>\n    );\n\n};\n\nexport default GameDisplay;","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/DiceDisplay.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/components/Dice.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":19,"nodeType":"39","messageId":"40","endLine":1,"endColumn":28},{"ruleId":"37","severity":1,"message":"41","line":15,"column":12,"nodeType":"39","messageId":"40","endLine":15,"endColumn":22},{"ruleId":"37","severity":1,"message":"42","line":15,"column":24,"nodeType":"39","messageId":"40","endLine":15,"endColumn":37},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'playerName' is assigned a value but never used.","'setPlayerName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> f3fdca63b2731cb5cea146be1eb9ae6e537c5e19
