[{"/Users/user/codeclan_work/projects/roll_the_bones/client/src/index.js":"1","/Users/user/codeclan_work/projects/roll_the_bones/client/src/App.js":"2","/Users/user/codeclan_work/projects/roll_the_bones/client/src/reportWebVitals.js":"3","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/GameDisplay.js":"4","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/DiceDisplay.js":"5","/Users/user/codeclan_work/projects/roll_the_bones/client/src/components/Dice.js":"6","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/ScoreTable.js":"7","/Users/user/codeclan_work/projects/roll_the_bones/client/src/services/GameServices.js":"8","/Users/user/codeclan_work/projects/roll_the_bones/client/src/components/Score.js":"9"},{"size":500,"mtime":1610200880600,"results":"10","hashOfConfig":"11"},{"size":605,"mtime":1610297254782,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610200880605,"results":"13","hashOfConfig":"11"},{"size":2740,"mtime":1610296994869,"results":"14","hashOfConfig":"11"},{"size":350,"mtime":1610296994869,"results":"15","hashOfConfig":"11"},{"size":1010,"mtime":1610296994868,"results":"16","hashOfConfig":"11"},{"size":379,"mtime":1610297254783,"results":"17","hashOfConfig":"11"},{"size":450,"mtime":1610297254783,"results":"18","hashOfConfig":"11"},{"size":133,"mtime":1610297254782,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xpmnjc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/user/codeclan_work/projects/roll_the_bones/client/src/index.js",[],["43","44"],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/App.js",["45","46","47"],"import {useState, useEffect} from \"react\";\nimport './App.css';\n\nimport {BrowerRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport GameDisplay from \"./containers/GameDisplay\";\nimport ScoreTable from \"./containers/ScoreTable\";\nimport { getScores } from \"./services/GameServices\"; \n\nfunction App() {\n\n  const [highScores, sethighScores] = useState([]);\n\n  useEffect(()=> {\n      getScores().then((hScores)=>{\n          sethighScores(hScores);\n      })\n  }, []);\n\n\n  return (\n      <>\n        <GameDisplay />\n        <ScoreTable highScores= {highScores} />\n      </>\n  );\n}\n\nexport default App;\n","/Users/user/codeclan_work/projects/roll_the_bones/client/src/reportWebVitals.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/GameDisplay.js",["48","49","50"],"import {useState, useEffect} from \"react\";\nimport DiceDisplay from \"./DiceDisplay\"\n\nconst GameDisplay = ()=>{\n\n    // Dice currently hard coded, could use method to return array \n    // of dice objects, given how many dice to use. \n    const dice  = {value: 1, active: true , min: 1, max: 6}\n    const dice2 = {value: 1, active: true , min: 1, max: 6}\n    const dice3 = {value: 1, active: true , min: 1, max: 6}\n    const dice4 = {value: 1, active: true , min: 1, max: 6}\n    const dice5 = {value: 1, active: true , min: 1, max: 6}\n    const stickNumber = 5; \n\n    const [playerName, setPlayerName]   = useState(\"\");\n    const [playerScore, setPlayerScore] = useState(0);\n    const [turnScore, setTurnScore]     = useState(0);\n    const [availDice, setAvailDice]     = useState([dice, dice2, dice3, dice4, dice5]);\n\n    // Add the roll value to the players score. \n    const addToPlayerScore = (value)=>{\n        let tempNum = playerScore;\n        setPlayerScore(value + tempNum);\n    }\n\n    // Will return a random number between min & max.\n    const getRandomInt = (min, max) => {\n        return Math.floor(Math.random() * max) + min;\n    }\n\n    // Takes availDice and rolls new values.\n    const rollDiceValues = () => {\n        let newDiceArray = availDice.map((element)=>{\n            element.value = getRandomInt(element.min, element.max)\n            return(element);\n        })\n        console.log(`new dice array is : ${newDiceArray}`)\n        setAvailDice(newDiceArray);\n    }\n\n    // Checks a roll for sticking numbers and deactivates die.\n    const checkForStickNums = () => {\n        let newDiceArray = availDice.map((element)=>{\n            if(element.value === stickNumber){\n                element.active = false;\n            }\n            return(element);\n        });\n        console.log(`new dice array is : ${newDiceArray}`)\n        setAvailDice(newDiceArray);\n    };\n\n    // Calculates the players score and and adds it\n    // to the playerScore, sets turnScore. \n    const calculateRoll = () => {\n        let total = 0;\n        availDice.forEach((element) => {\n            if(element.active === true){\n                total += element.value;\n            } \n        });\n        setTurnScore(total)\n        addToPlayerScore(total);\n    };\n\n    // Handles the roll dice button for the game. \n    const handleRollButton = ()=>{\n        rollDiceValues();\n        checkForStickNums();\n        calculateRoll();\n    }\n\n    return(\n        <>\n            <h2>Player Score: {playerScore}</h2>\n            <h2>Score This Turn: {turnScore}</h2>\n            <button onClick={handleRollButton} value=\"Roll Dice\"> Roll Dice </button>\n            <DiceDisplay diceList = {availDice}/>\n        </>\n    );\n\n};\n\nexport default GameDisplay;","/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/DiceDisplay.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/components/Dice.js",["51"],"import dice1 from \"../dice_images/Dice1.png\"\nimport dice2 from \"../dice_images/Dice2.png\"\nimport dice3 from \"../dice_images/Dice3.png\"\nimport dice4 from \"../dice_images/Dice4.png\"\nimport dice5 from \"../dice_images/Dice5.png\"\nimport dice6 from \"../dice_images/Dice6.png\"\n\nconst Dice = ()=>{\n\n    return(\n        <>\n        <p>this is a die</p>\n        <img className=\"dice-images\" src={dice1} alt=\"Dice Face Showing 1\" />\n        <img className=\"dice-images\" src={dice2} alt=\"Dice Face Showing 1\" />\n        <img className=\"dice-images\" src={dice3} alt=\"Dice Face Showing 1\" />\n        <img className=\"dice-images\" src={dice4} alt=\"Dice Face Showing 1\" />\n        <img className=\"dice-images\" src={dice5} alt=\"Dice Face Showing 1\" />\n        <img className=\"dice-images\" src={dice6} alt=\"Dice Face Showing 1\" />\n        </>\n    )\n\n}\n\nexport default Dice;",["52","53"],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/containers/ScoreTable.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/services/GameServices.js",[],"/Users/user/codeclan_work/projects/roll_the_bones/client/src/components/Score.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":25,"nodeType":"60","messageId":"61","endLine":4,"endColumn":31},{"ruleId":"58","severity":1,"message":"62","line":4,"column":33,"nodeType":"60","messageId":"61","endLine":4,"endColumn":38},{"ruleId":"58","severity":1,"message":"63","line":4,"column":40,"nodeType":"60","messageId":"61","endLine":4,"endColumn":46},{"ruleId":"58","severity":1,"message":"64","line":1,"column":19,"nodeType":"60","messageId":"61","endLine":1,"endColumn":28},{"ruleId":"58","severity":1,"message":"65","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":22},{"ruleId":"58","severity":1,"message":"66","line":15,"column":24,"nodeType":"60","messageId":"61","endLine":15,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":15,"column":18,"nodeType":"69","messageId":"70","endLine":15,"endColumn":20},{"ruleId":"54","replacedBy":"71"},{"ruleId":"56","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'useEffect' is defined but never used.","'playerName' is assigned a value but never used.","'setPlayerName' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["73"],["74"],"no-global-assign","no-unsafe-negation"]