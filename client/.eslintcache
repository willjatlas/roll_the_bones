[{"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/index.js":"1","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/reportWebVitals.js":"2","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/App.js":"3","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/CardDisplay.js":"4","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/NavBar.js":"5","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/ErrorPage.js":"6","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/services/GameServices.js":"7","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/GameDisplay.js":"8","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/ScoreTable.js":"9","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/HomePage.js":"10","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/CardBoard.js":"11","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/PlayerNameForm.js":"12","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/DiceDisplay.js":"13","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/Score.js":"14","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/Card.js":"15","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/Die.js":"16","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/ResultsPage.js":"17"},{"size":613,"mtime":1610462556629,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610201755424,"results":"20","hashOfConfig":"19"},{"size":2155,"mtime":1610462556625,"results":"21","hashOfConfig":"19"},{"size":1804,"mtime":1610452302169,"results":"22","hashOfConfig":"19"},{"size":670,"mtime":1610371507612,"results":"23","hashOfConfig":"19"},{"size":138,"mtime":1610359082873,"results":"24","hashOfConfig":"19"},{"size":450,"mtime":1610359082876,"results":"25","hashOfConfig":"19"},{"size":4732,"mtime":1610462556626,"results":"26","hashOfConfig":"19"},{"size":348,"mtime":1610446904533,"results":"27","hashOfConfig":"19"},{"size":694,"mtime":1610446904529,"results":"28","hashOfConfig":"19"},{"size":2851,"mtime":1610469349594,"results":"29","hashOfConfig":"19"},{"size":896,"mtime":1610446904530,"results":"30","hashOfConfig":"19"},{"size":365,"mtime":1610446904532,"results":"31","hashOfConfig":"19"},{"size":143,"mtime":1610446904531,"results":"32","hashOfConfig":"19"},{"size":316,"mtime":1610379727252,"results":"33","hashOfConfig":"19"},{"size":997,"mtime":1610359082873,"results":"34","hashOfConfig":"19"},{"size":148,"mtime":1610462556625,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"lynpae",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/index.js",[],["73","74"],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/reportWebVitals.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/App.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/CardDisplay.js",["75"],"import React, {useState} from 'react';\nimport CardBoard from \"../components/CardBoard\";\nimport backImg from \"../card_images/back.jpeg\";\nimport jack1 from \"../card_images/jack1.jpeg\";\nimport jack2 from \"../card_images/jack2.jpeg\";\nimport jack3 from \"../card_images/jack3.jpeg\";\nimport jack4 from \"../card_images/jack4.jpeg\";\nimport jack5 from \"../card_images/jack5.jpeg\";\nimport jack6 from \"../card_images/jack6.jpeg\";\nimport jack7 from \"../card_images/jack7.jpeg\";\nimport jack8 from \"../card_images/jack8.jpg\";\n\nconst CardDisplay = () => {\n    const cards = buildCards()\n    return (\n        <div className=\"CardDisplay\">\n            <CardBoard cards={cards} />\n        </div>\n    )\n}\n\n    function buildCards() {\n        let id = 0\n        const images = {jack1, jack2, jack3, jack4, jack5, jack6, jack7, jack8}\n        const cards = Object.keys(images).reduce((result, item) => {\n            const createCard = () => ({\n                id: id++, // Unique identify of each card\n                type: item, // Value to check if 2 cards open are same type\n                backImg: backImg, // The placeholder image when card is closed \n                frontImg: images[item], // The image shown when the card is open\n                flipped: false, // Value to check is card is open or closed\n            })\n            return [...result, createCard(), createCard()]\n        }, [])\n        return shuffle(cards)\n    }\n\n    function shuffle(arr) {\n        let len = arr.length\n        for (let i = 0; i < len; i++) {\n            let randomIdx = Math.floor(Math.random() * len)\n            let copyCurrent = {...arr[i]}\n            let copyRandom = {...arr[randomIdx]}\n            arr[i] = copyRandom\n            arr[randomIdx] = copyCurrent\n        }\n        return arr\n    }\n\n\nexport default CardDisplay;","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/NavBar.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/ErrorPage.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/services/GameServices.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/GameDisplay.js",["76","77"],"import {useState, useEffect, useRef} from \"react\";\nimport DiceDisplay from \"./DiceDisplay\";\nimport PlayerNameForm from \"../components/PlayerNameForm\";\nimport Popup from 'reactjs-popup';\n\n\nconst GameDisplay = ({checkNewHighScore})=>{\n\n    // Dice currently hard coded, could use method to return array \n    // of dice objects, given how many dice to use. \n    const dice  = {value: 1, active: true , min: 1, max: 6}\n    const dice2 = {value: 1, active: true , min: 1, max: 6}\n    const dice3 = {value: 1, active: true , min: 1, max: 6}\n    const dice4 = {value: 1, active: true , min: 1, max: 6}\n    const dice5 = {value: 1, active: true , min: 1, max: 6}\n    const stickNumber = 5; \n\n    // Game States\n    const [playerName, setPlayerName]   = useState(\"Player\");\n    const [playerScore, setPlayerScore] = useState(0);\n    const [turnScore, setTurnScore]     = useState(0);\n    const [availDice, setAvailDice]     = useState([dice, dice2, dice3, dice4, dice5]);\n    const [gameState, setGameState]     = useState(true);\n    const [btnDisable, setBtnDisable]   = useState(true);\n    const [plyrNmDsbl, setPlyrNmDsbl]   = useState(false);\n    const [highScore, setHighScore]     = useState(false);\n\n    // Adds the entered player name to the state\n    const handleName = (name)=>{\n        setPlayerName(name);\n        setBtnDisable(false);\n        setPlyrNmDsbl(true);\n    };\n    \n    // Add the roll value to the players score. \n    const addToPlayerScore = (value)=>{\n        let tempNum = playerScore;\n        setPlayerScore(value + tempNum);\n    }\n\n    // Will return a random number between min & max.\n    const getRandomInt = (min, max)=>{\n        return Math.floor(Math.random() * max) + min;\n    }\n\n    // Takes availDice and rolls new values.\n    const rollDiceValues = ()=>{\n        let newDiceArray = availDice.map((element)=>{\n            element.value = getRandomInt(element.min, element.max)\n            return(element);\n        })\n        console.log(`new dice array is : ${newDiceArray}`)\n        setAvailDice(newDiceArray);\n    }\n\n    // Checks a roll for sticking numbers and deactivates die.\n    const checkForStickNums = ()=>{\n        let newDiceArray = availDice.map((element)=>{\n            if(element.value === stickNumber){\n                element.active = false;\n            }\n            return(element);\n        });\n        console.log(`new dice array is : ${newDiceArray}`)\n        setAvailDice(newDiceArray);\n    };\n\n    // Calculates the players score and and adds it\n    // to the playerScore, sets turnScore. \n    const calculateRoll = ()=>{\n        let total = 0;\n        availDice.forEach((element) => {\n            if(element.active === true){\n                total += element.value;\n            } \n        });\n        setTurnScore(total)\n        addToPlayerScore(total);\n    };\n\n    // Checks for active dice.\n    const checkDieAvailable = (diceList)=>{\n        let boolList = diceList.map(element=>element.active);\n        let output   = boolList.includes(true);\n        return output;\n    };\n \n    // Handles the roll dice button for the game. \n    const handleRollButton = ()=>{\n        if(checkDieAvailable(availDice) !== false){\n            rollDiceValues();\n            checkForStickNums();\n            calculateRoll();\n            if (checkDieAvailable(availDice) === false){\n                setGameState(false);\n            };\n        };\n    };\n\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n    const closeResults = () => ref.current.close();\n\n    // watches the game state for when the game is finished. \n    useEffect(()=>{\n        // If statement catches init render.\n        if(gameState !== true){\n            setBtnDisable(true);\n            setOpen(o => !o);\n            setHighScore(checkNewHighScore(playerName, playerScore))\n        }\n    }, [gameState]);\n\n    return(\n        <div id=\"game-display\">\n            <PlayerNameForm handleName={handleName} \n                            disabled={plyrNmDsbl}  />\n            <h2>{playerName}'s Score : {playerScore}</h2>\n            <h2>Score This Turn: {turnScore}</h2>\n            <button id=\"roll-dice-button\" \n                    onClick={handleRollButton} \n                    disabled={btnDisable}> Roll Dice \n            </button>\n            \n            <Popup open={open}>\n                <div className=\"result\">\n                    <element \n                      className=\"close\" \n                      onClick={closeResults}\n                    >\n                    ☠️;\n                    </element>\n                Blow me down, what a score! {playerScore}\n                </div>\n            </Popup>\n            <DiceDisplay diceList = {availDice}/>\n        </div>\n    );\n\n};\n\nexport default GameDisplay;","/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/ScoreTable.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/HomePage.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/CardBoard.js",["78"],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/PlayerNameForm.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/containers/DiceDisplay.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/Score.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/Card.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/Die.js",[],"/Users/codeclanstudent/codeclan_work/week_09/group_project/roll_the_bones/client/src/components/ResultsPage.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":24},{"ruleId":"83","severity":1,"message":"87","line":26,"column":12,"nodeType":"85","messageId":"86","endLine":26,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":112,"column":8,"nodeType":"90","endLine":112,"endColumn":19,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":45,"column":6,"nodeType":"90","endLine":45,"endColumn":27,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'highScore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkNewHighScore', 'playerName', and 'playerScore'. Either include them or remove the dependency array. If 'checkNewHighScore' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [checkNewHighScore, gameState, playerName, playerScore]",{"range":"102","text":"103"},"Update the dependencies array to be: [cards, checkers, completed]",{"range":"104","text":"105"},[3821,3832],"[checkNewHighScore, gameState, playerName, playerScore]",[1359,1380],"[cards, checkers, completed]"]